<?php

/*
|--------------------------------------------------------------------------
| Framework Configuration
|--------------------------------------------------------------------------
|
| Configure General Options
|
*/
$config = array(

    'url' => array(
        'base'   => '/',   // Base Url "/" URL of your framework root, generally a '/' trailing slash. 
        'assets' => '/',   // Assets Url of your framework generally a '/' trailing slash.
        'rewrite' => array(
            'index_page' => '',  // Typically this will be your index.php file, If mod_rewrite enabled is should be blank.
            'suffix'     => '',  // Allows you to add a suffix to all URLs generated by Framework.
        )
    ),
    'error' => array(
        'reporting' => 1,       // 'E_ALL ^ E_NOTICE'; // 'E_ALL ^ (E_NOTICE | E_WARNING | E_EXCEPTION | E_DATABASE)';
        'debug'  => array(
                            'enabled' => 'E_ALL',  // Debug backtrace help you to fast development.
                            'padding' => 3
                        ),
    ),
    'envnvironment' => array(
        'files' => array(     // Defined config files for each environments.
                                    'config',
                                    'database',
                                    'routes',
                                    'sess',
                                    'logger',
                                    'logger_mongo',
                                    'mongo'
                                ),
    ),
    // Log Severities:
    // ---------------------------------------------------
    // emergency (0) : Emergency: system is unusable.
    // alert (1)     : Action must be taken immediately. Example: Entire website down, database unavailable, etc. This should trigger the SMS alerts and wake you up.
    // critical (2)  : Critical conditions. Example: Application component unavailable, unexpected exception.
    // error (3)     : Runtime errors that do not require immediate action but should typically be logged and monitored.
    // warning (4)   : Exceptional occurrences that are not errors. Examples: Use of deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong.
    // notice (5)    : Normal but significant events.
    // info (6)      : Interesting events. Examples: User logs in, SQL logs, Application Benchmarks.
    // debug (7)     : Detailed debug information.
    // ---------------------------------------------------
    // @see Syslog Protocol http://tools.ietf.org/html/rfc5424
    // ---------------------------------------------------
    'log' => array(
        'enabled'   => false,  // On / Off logging
        'output'    => false,  // On / Off logger html output
        'threshold' => array(0,1,2,3,4,5,6,7),  // array(0,1,2) = emergency,alert,critical
        'handler'   => array('file' => 'File'), // Handler name & driver: File, Mongo.
        'queries'   => true,   // If true "all" SQL Queries gets logged.
        'benchmark' => true,   // If true "all" Application Benchmarks gets logged.
        'channel'   => 'system',  // Default channel name should be general.
        'line'      => '[%datetime%] %channel%.%level%: --> %message% %context% %extra%\n',  // This format just for line based log drivers.
        'push_handlers' => array(                       // Define your available push handlers.
                                    'email' => 'Email',  
                                    'mongo' => 'Mongo'
                                ),
    ),
    // Push Example
    // ---------------------------------------------------
    // $this->logger->channel('security');
    // $this->logger->alert('Possible hacking attempt !', array('username' => $username));
    // $this->logger->push('email');  // send log data using email handler
    // $this->logger->push('mongo');  // send log data to mongo db handler
    // $this->logger->clear();  // reset to default logger configuration, default channel etc ..
    // ---------------------------------------------------

    // VERY IMPORTANT: * For a live site you'll usually only enable "Errors (1)" to be logged
    // otherwise your log files will fill up very fast.
    
    // 
    // http://www.microsoft.com/resources/msdn/goglobal/default.mspx

    'locale' => array(
        'translate_notice'    => false,     // puts 'translate:' texts everywhere it is help you for multilingual development.
        'time_reference'      => 'local',   // This pref tells the system whether to use your server's local time as the master "now" reference, or convert it to GMT.
        'default_translation' => 'en_US',   // This determines which set of language files should be used.
        'charset'             => 'UTF-8',   // This determines which character set is used by default.
     ),
    'hooks' => array(
        'enabled' => false,     // If you would like to use the 'hooks' feature you must enable it 
                                // by etting this variable to "true".
    ),
    'uri' => array(
        'protocol' => 'AUTO',     // Auto detects the URI protocol * Default option is 'AUTO', 
                                  // other options: REQUEST_URI, QUERY_STRING, PATH_INFO.
                                  // Note : If your links do not seem to work and try to change your uri_protocol 
                                  // with one of these options: REQUEST_URI, QUERY_STRING, PATH_INFO
                                  // Example Usage of Query Strings- http://example.com/login?param=1&param2=yes
        // Allowed URL Characters
        'permitted_chars' => 'a-z 0-9~%.:_-=',  // Do not remove the "=" character other wise model_auto_sync mode will not work.
                                                // This lets you specify with a regular expression which characters are permitted within your URLs.
                                                // As a security measure you are STRONGLY encouraged to restrict URLs to as few characters as possible.
                                                // Leave blank to allow all characters -- but only if you are insane.
        // Enable Query Strings        
        // Please note that some of the functions won't work as expected when
        // this feature is enabled, since Framework is designed primarily to use segment based URLs.

        'query_strings'      => true,     // By default Framework uses search-engine friendly segment based URLs: example.com/who/what/where/
        'directory_trigger'  => 'd',      // You can optionally enable standard query string based URLs: example.com?who=me&what=something&where=here
        'controller_trigger' => 'c',      // The other items let you set the query string "words" that will invoke your controllers and its functions:
        'function_trigger'   => 'm',      // example.com/index.php?d=directory&c=controller&m=function

        // Extensions
        'extensions' => array('.json','.xml'),   // e.g. : http://example.com/web_service/example.json
    ),
    'security' => array(
        'encryption_key'   => 'write-your-secret-key',  // If you use the Encryption class you MUST set an encryption key.
        'xss_filtering'    => false,                    // Whether the XSS filter is always active when GET, POST or COOKIE data is encountered
        // Cross Site Request Forgery
        'csrf' => array(
            'protection'  => false,              // Enables a CSRF cookie token to be set. When set to true, token will be
            'token_name'  => 'csrf_token',       // checked on a submitted form. If you are accepting user data, it is strongly
            'cookie_name' => 'csrf_cookie',      // recommended CSRF protection be enabled.
            'expire'      => '7200',        // The number in seconds the token should expire.
         ),
    ),
    'cookie' => array( 
        'prefix' => '',                          // Set a prefix if you need to avoid collisions
        'domain' => '',                          // Set to .your-domain.com for site-wide cookies
        'path'   => '/',                         // Typically will be a forward slash
        'expire' => (7 * 24 * 60 * 60),          // 1 week - Cookie expire time.
        'secure' => false,                       // Cookies will only be set if a secure HTTPS connection exists.
    ),
    'proxy' => array(
        'ips' => '',      // Reverse Proxy IPs
    ),
    // If your server is behind a reverse proxy, you must whitelist the proxy IP
    // addresses from which the Framework should trust the HTTP_X_FORWARDED_FOR
    // header in order to properly identify the visitor's IP address.
    // Comma-delimited, e.g. '10.0.1.200,10.0.1.201'

    'output' => array(
        'compress' => false,
    ),
    // Enables Gzip output compression for faster page loads.  When enabled,
    // the Response class will test whether your server supports Gzip.
    // Even if it does, however, not all browsers support compression
    // so enable only if you are reasonably sure your visitors can handle it.

);

/* End of file config.php */
/* Location: .app/config/debug/config.php */